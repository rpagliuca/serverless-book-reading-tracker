service: serverless-book-reading-tracker

custom:
  stage: ${opt:stage, self:provider.stage}
  entriesTable: ${self:service}-${self:custom.stage}-entries-table-v4

provider:
  name: aws
  profile: ${file(env.json):AWS_PROFILE}
  runtime: go1.x
  memorySize: 128
  timeout: 1
  iam:
    role:
      statements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:DeleteItem
          - dynamodb:UpdateItem
        Resource: "*"
  # Enable future standards to avoid deprecation warnings
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  main:
    handler: bin/main
    events:
      - http:
          path: /entries
          method: post
          cors: true
      - http:
          path: /entries
          method: get
          cors: true
      - http:
          path: /entries/{uuid}
          method: patch
          cors: true
      - http:
          path: /entries/{uuid}
          method: delete
          cors: true
      - http:
          path: /entries/{uuid}
          method: get
          cors: true
      - http:
          path: /login
          method: post
          cors: true
    environment:
      ENTRIES_TABLE: ${self:custom.entriesTable}

resources: # CloudFormation template syntax from here on.
  Resources:
    entriesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.entriesTable}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE 
